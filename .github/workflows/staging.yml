name: nest-prisma

on:
  push:
    branches:
      - main
    workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ secrets.CI_DEPLOY_IMAGE }}
          file: ./Dockerfile

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      CI_PRIVATE_KEY: ${{ secrets.CI_PRIVATE_KEY }}
      CI_DEPLOY_SERVER: ${{ secrets.CI_DEPLOY_SERVER }}
      CI_DEPLOY_USER: ${{ secrets.CI_DEPLOY_USER }}
      CI_DEPLOY_SSH_PORT: ${{ secrets.CI_SSH_PORT }}
      CI_DEPLOY_ENV_VARS: ${{ secrets.CI_DEPLOY_ENV_VARS }}
      CI_GITHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      CI_GITHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.CI_PRIVATE_KEY }}
      - name: Deploy to staging
        run: |
          ./deploy/setup_deploy_env.sh
          ./deploy/deploy_to_staging.sh

  notification:
    runs-on: ubuntu-latest
    env:
      BUILD_FAIL: ${{ (needs.build.result == 'failure' || needs.build.result == 'timed_out') || (needs.deploy.result == 'failure' || needs.deploy.result == 'timed_out') }}
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    needs:
      - build
      - deploy
    if: ${{ always() || (needs.build.result == 'failure' || needs.build.result == 'timed_out') || (needs.deploy.result == 'failure' || needs.deploy.result == 'timed_out') }}
    steps:
      - name: Check version
        uses: actions/checkout@v4
      - name: Print var
        run: echo $BUILD_FAIL
      - name: List folder
        run: ls
      - name: Run deploy notification script
        run: |
          bash ./deploy/scripts/notification.sh
